% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotPeakMatrix.R
\name{ArrangeMultipleImg2Plot}
\alias{ArrangeMultipleImg2Plot}
\title{ArrangeMultipleImg2Plot}
\usage{
ArrangeMultipleImg2Plot(
  peakMat,
  values,
  nrow,
  ncol,
  byrow = T,
  margin = 20,
  img_names = peakMat$names,
  rotations = rep(0, length(img_names)),
  mirror_x = rep(F, length(img_names)),
  mirror_y = rep(F, length(img_names))
)
}
\arguments{
\item{peakMat}{an rMSIproc peak matrix.}

\item{values}{a vector of pixel values following the same order as pixels appear in the peak matrix.}

\item{nrow}{number of rows of the plotted matrix layout (only used if byrow == F)}

\item{ncol}{number of cols of the plotted matrix layout (only used if byrow == T)}

\item{byrow}{a bool specifing if images must be arranged in rows.}

\item{margin}{the separation between plotted images.}

\item{img_names}{a character vector with img names in the desierd plotting order.}

\item{rotations}{a vector with the rotation of each images specified in degrees.}

\item{mirror_x}{a bool vector specifing if each image must be flipped or not in X direction prior to rotation.}

\item{mirror_y}{a bool vector specifing if each image must be flipped or not in Y direction prior to rotation.}
}
\value{
a list object conaining the arranged position matrix, the pixel values and the labels positions.
}
\description{
Prepare multiple images to be plotted with arbitrary data that must be specified as a vector using the values parameter.
The values vector must be sorted according the pos matrix of the provided peak matrix object (peakMat).
The images will be plotted laidout in a matrix according the parameters nrow, ncol and byrow which follows the
same conventions as the R matrix() function.
A different order of the images can be specified with the img_name parameter. Just provide the images names to plotted in the desierd order.
Additionally each single image can be flip horizontally and vertically and/or rotated to any angle using the parameters mirror_x, mirror_y and rotations.
}
