% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggplot_additional_graphics.R
\name{plotValuesImageG}
\alias{plotValuesImageG}
\title{plotValuesImageG.}
\usage{
plotValuesImageG(
  peakMatrix,
  pixel_values,
  scale_label = "",
  title_label = "",
  plot_rows = 2,
  plot_cols = 2,
  plot_byrow = T,
  plot_rotations = rep(0, length(peakMatrix$names)),
  plot_mirror_X = rep(F, length(peakMatrix$names)),
  plot_mirror_Y = rep(F, length(peakMatrix$names)),
  plot_margin = 40,
  plot_labels = peakMatrix$names,
  gradient_scale_colours = rev(rainbow(n = 100, start = 0, end = 0.6)),
  gradient_scale_limits = c(min(pixel_values), max(pixel_values)),
  fixed_aspect_ratio = F,
  display_colorbar = T
)
}
\arguments{
\item{peakMatrix}{an rMSIproc peak matrix.}

\item{pixel_values}{a vector with the pixel values, factor object can be used for a discrete image.}

\item{scale_label}{Text label for the plot scale bar.}

\item{title_label}{Text label for the plot main title.}

\item{plot_rows}{number of rows to arrange multiple images in the plotting area.}

\item{plot_cols}{number of columns to arrange multiple images in the plotting area.}

\item{plot_byrow}{a boolean idicating if the plotted images must be sorted by rows.}

\item{plot_rotations}{a vector with the rotation in degree to apply to each image.}

\item{plot_mirror_X}{a vector of booleans idicatinc if each image must be flipped horizontally.}

\item{plot_mirror_Y}{a vector of booleans idicatinc if each image must be flipped vertically.}

\item{plot_margin}{a numeric value that determines the separation between images.}

\item{plot_labels}{text labels to be used for each image.}

\item{gradient_scale_colours}{alternative color scale for the image.}

\item{gradient_scale_limits}{alternative limits for the pixel values.}

\item{fixed_aspect_ratio}{set this flag to true to fix the aspect ratio of the ion images.}

\item{display_colorbar}{set if the colour bar must be displayed.}
}
\value{
a ggplot2 object.
}
\description{
Plot a raster image of arbitrary pixel values. This cna be use to plot PCA results for example.
This function is equivalent to the rMSIproc::plotValuesImage() but using ggplot2.
If the pixel_values is a "factor" object then discrete colors are used. This is useful to plot clustering results.
}
