% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/librMSIdata.R
\name{LoadMsiData}
\alias{LoadMsiData}
\title{Load rMSI data from a compressed tar.}
\usage{
LoadMsiData(
  data_file,
  fun_progress = NULL,
  fun_label = NULL,
  close_signal = NULL,
  imzMLChecksum = F,
  imzMLRename = NULL,
  imzMLSubCoords = NULL,
  encoding_threads = parallel::detectCores()
)
}
\arguments{
\item{data_file}{The tar o imzML file containing the MS image in rMSI format or imzML.}

\item{fun_progress}{This is a callback function to update the progress of loading data. See details for more information.}

\item{fun_label}{This is a callback function to update the progress bar dialog text.}

\item{close_signal}{function to be called if the loading process is aborted.}

\item{imzMLChecksum}{if the binary file checksum must be verified, it can be disabled for convenice with really big files.}

\item{imzMLRename}{the image name, if NULL a default name based on the file name will be used.}

\item{imzMLSubCoords}{a Complex vector with the motors coordinates to be included in the ramdisk, if NULL all positions will be used.}

\item{encoding_threads}{numeber of threads to use during the pngstream encoding process.}
}
\value{
an rMSI object pointing to ramdisk stored data

Loads a rMSI data object from .tar compressed file or imzML format. 
fun_progress can be NULL or a function with the following prototipe: fun_progress( currentState ). If NULL is used
a default command line progress bar is used.
This function will be called periodically to monitor the loading status. This is usefull to implement progressbars.
}
\description{
Load rMSI data from a compressed tar.
}
